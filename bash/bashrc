#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Source aliases
if [ -e /etc/profile.d/vte.sh ]
then
    source /etc/profile.d/vte.sh
fi

# Source aliases
if [ -f ~/.config/bash/aliases ]
then
    source ~/.config/bash/aliases
fi

# Source fzf keybindings
if [ -f /usr/share/fzf/shell/key-bindings.bash ]
then
    source /usr/share/fzf/shell/key-bindings.bash
fi
# History
bind "set history-size 10000"

# Human readable
bind "set colored-stats On"
bind "set completion-ignore-case Off"
bind "set completion-prefix-display-length 3"
bind "set mark-symlinked-directories On"
bind "set show-all-if-ambiguous On"
bind "set show-all-if-unmodified On"
bind "set visible-stats On"

# Vi mode
bind "set editing-mode vi"
bind "set show-mode-in-prompt on"
bind "set vi-cmd-mode-string \1\e[2 q\2"
bind "set vi-ins-mode-string \1\e[6 q\2"
bind "set keyseq-timeout 0"

_edit_wo_executing() {
    local editor="${EDITOR:-nano}"
    tmpf="$(mktemp)"
    printf '%s\n' "$READLINE_LINE" > "$tmpf"
    "$editor" "$tmpf"
    READLINE_LINE="$(<"$tmpf")"
    READLINE_POINT="${#READLINE_LINE}"
    /usr/bin/rm -f "$tmpf" # -f for those who have alias rm='rm -i', full path because I have -verbose flag
}

bind -m vi-command -x '"\C-e":_edit_wo_executing'
bind -m vi-command -x '"v":_edit_wo_executing'
bind -m vi-insert -x '"\C-e":_edit_wo_executing'

RESET_PROMPT_ATTR=$(tput sgr0)
PS1='\[\e[01;31m\][\[\e[33m\]\u\[\e[32m\]@\[\e[34m\]\h \[\e[35m\]\w\[\e[31m\]]$RESET_PROMPT_ATTR\$ '

# Autocd
shopt -s autocd
# Disable Ctrl-s to freeze terminal
stty -ixon
# Clear screen
bind -m vi-insert '"\C-l":clear-screen'

# Change working dir in shell to last dir in lf on exit (adapted from ranger).
#
# You need to either copy the content of this file to your shell rc file
# (e.g. ~/.bashrc) or source this file directly:
#
#     LFCD="/path/to/lfcd.sh"
#     if [ -f "$LFCD" ]; then
#         source "$LFCD"
#     fi
#
# You may also like to assign a key (Ctrl-O) to this command:
#
#     bind '"\C-o":"lfcd\C-m"'  # bash
#     bindkey -s '^o' 'lfcd\n'  # zsh
#

lfcd () {
    tmp="$(mktemp)"
    # `command` is needed in case `lfcd` is aliased to `lf`
    command lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp" 1>/dev/null
        if [ -d "$dir" ]; then
            if [ "$dir" != "$(pwd)" ]; then
                cd "$dir"
            fi
        fi
    fi
}

bind '"\C-o":"lfcd\C-m"'
